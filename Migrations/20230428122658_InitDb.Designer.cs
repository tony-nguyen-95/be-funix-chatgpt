// <auto-generated />
using System;
using Funix.HannahAssistant.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Funix.HannahAssistant.Api.Migrations
{
    [DbContext(typeof(HannahAssistantDbContext))]
    [Migration("20230428122658_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Certificate", b =>
                {
                    b.Property<Guid>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CertificateId");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PlanEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PlanStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("CertificateId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Hannah", b =>
                {
                    b.Property<Guid>("HannahId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("HannahId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Hannah");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.HannahStudent", b =>
                {
                    b.Property<Guid>("HannahStudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("HannahId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsSupport")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.HasKey("HannahStudentId");

                    b.HasIndex("HannahId");

                    b.HasIndex("StudentId");

                    b.ToTable("HannahStudent");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Lession", b =>
                {
                    b.Property<Guid>("LessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LessionType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Scores")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.HasKey("LessionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lession");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.StickyNote", b =>
                {
                    b.Property<Guid>("StickyNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("HannahStudentId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StickyNoteId");

                    b.HasIndex("HannahStudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StickyNote");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FunixEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FunixId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("HannahId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("HannahId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.StudentCertificate", b =>
                {
                    b.Property<Guid>("StudentCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.HasKey("StudentCertificateId");

                    b.HasIndex("CertificateId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCertificate");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.StudentContact", b =>
                {
                    b.Property<Guid>("StudentContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("StudentContactId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentContact");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Subject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCertificate", b =>
                {
                    b.Property<Guid>("TempCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TempCertificateId");

                    b.ToTable("TempCertificate");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCertificateCourse", b =>
                {
                    b.Property<Guid>("TempCertificateCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("TempCertificateId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TempCourseId")
                        .HasColumnType("char(36)");

                    b.HasKey("TempCertificateCourseId");

                    b.HasIndex("TempCertificateId");

                    b.HasIndex("TempCourseId");

                    b.ToTable("TempCertificateCourse");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCourse", b =>
                {
                    b.Property<Guid>("TempCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalWeekLearning")
                        .HasColumnType("int");

                    b.HasKey("TempCourseId");

                    b.ToTable("TempCourse");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCourseWeeklySchedule", b =>
                {
                    b.Property<Guid>("TempCourseScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFinalExam")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<Guid>("TempCourseId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TotalAssignment")
                        .HasColumnType("int");

                    b.Property<int>("TotalLab")
                        .HasColumnType("int");

                    b.Property<int>("TotalPT")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuiz")
                        .HasColumnType("int");

                    b.HasKey("TempCourseScheduleId");

                    b.HasIndex("TempCourseId");

                    b.ToTable("TempCourseWeeklySchedule");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempLession", b =>
                {
                    b.Property<Guid>("TempLessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("TempSubjectId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TempLessionId");

                    b.HasIndex("TempSubjectId");

                    b.ToTable("TempLession");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempSubject", b =>
                {
                    b.Property<Guid>("TempSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("TempCourseId")
                        .HasColumnType("char(36)");

                    b.HasKey("TempSubjectId");

                    b.HasIndex("TempCourseId");

                    b.ToTable("TempSubject");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FunixEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FunixId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("f851e243-45b4-4350-8a2d-a0d0419d6b01"),
                            CreatedDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2610),
                            FunixEmail = "",
                            FunixId = "",
                            IsDeleted = false,
                            LoginDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2613),
                            Password = "6BFCC4026B5F162799A6DC8305C09DB9C1674AC616BD5C7422A45FBB6D0816AC163047C47A1F426F4F4C6B5B5042C671EABC4FDC7310FD5B183EEF59DC274604",
                            UpdatedDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2611),
                            UserName = "dattlt"
                        },
                        new
                        {
                            UserId = new Guid("0cf2c15a-32c8-4d96-b42c-315223fe475e"),
                            CreatedDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2668),
                            FunixEmail = "",
                            FunixId = "",
                            IsDeleted = false,
                            LoginDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2669),
                            Password = "6BFCC4026B5F162799A6DC8305C09DB9C1674AC616BD5C7422A45FBB6D0816AC163047C47A1F426F4F4C6B5B5042C671EABC4FDC7310FD5B183EEF59DC274604",
                            UpdatedDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2668),
                            UserName = "huynq"
                        },
                        new
                        {
                            UserId = new Guid("b2a67ddf-a229-4dbb-b269-92e8b74622e7"),
                            CreatedDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2690),
                            FunixEmail = "",
                            FunixId = "",
                            IsDeleted = false,
                            LoginDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2690),
                            Password = "6BFCC4026B5F162799A6DC8305C09DB9C1674AC616BD5C7422A45FBB6D0816AC163047C47A1F426F4F4C6B5B5042C671EABC4FDC7310FD5B183EEF59DC274604",
                            UpdatedDate = new DateTime(2023, 4, 28, 12, 26, 58, 535, DateTimeKind.Utc).AddTicks(2690),
                            UserName = "dungtct"
                        });
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Course", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Certificate", "Certificate")
                        .WithMany("Courses")
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Hannah", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.User", "User")
                        .WithOne("Hannah")
                        .HasForeignKey("Funix.HannahAssistant.Api.Entities.Hannah", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.HannahStudent", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Hannah", "Hannah")
                        .WithMany()
                        .HasForeignKey("HannahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Funix.HannahAssistant.Api.Entities.Student", "Student")
                        .WithMany("Hannahs")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hannah");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Lession", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Subject", "Subject")
                        .WithMany("Lessions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.StickyNote", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.HannahStudent", "HannahStudent")
                        .WithMany("StickyNotes")
                        .HasForeignKey("HannahStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Funix.HannahAssistant.Api.Entities.Student", null)
                        .WithMany("StickyNotes")
                        .HasForeignKey("StudentId");

                    b.Navigation("HannahStudent");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Student", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Hannah", null)
                        .WithMany("Students")
                        .HasForeignKey("HannahId");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.StudentCertificate", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Funix.HannahAssistant.Api.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.StudentContact", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Student", "Student")
                        .WithMany("Contacts")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Subject", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.Course", null)
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCertificateCourse", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.TempCertificate", "TempCertificate")
                        .WithMany("TempCertificateCourses")
                        .HasForeignKey("TempCertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Funix.HannahAssistant.Api.Entities.TempCourse", "TempCourse")
                        .WithMany("TempCertificateCourses")
                        .HasForeignKey("TempCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TempCertificate");

                    b.Navigation("TempCourse");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCourseWeeklySchedule", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.TempCourse", "TempCourse")
                        .WithMany("WeeklySchedules")
                        .HasForeignKey("TempCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TempCourse");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempLession", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.TempSubject", "TempSubject")
                        .WithMany("TempLessions")
                        .HasForeignKey("TempSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TempSubject");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempSubject", b =>
                {
                    b.HasOne("Funix.HannahAssistant.Api.Entities.TempCourse", "TempCourse")
                        .WithMany("TempSubjects")
                        .HasForeignKey("TempCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TempCourse");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Certificate", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Hannah", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.HannahStudent", b =>
                {
                    b.Navigation("StickyNotes");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Student", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Hannahs");

                    b.Navigation("StickyNotes");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.Subject", b =>
                {
                    b.Navigation("Lessions");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCertificate", b =>
                {
                    b.Navigation("TempCertificateCourses");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempCourse", b =>
                {
                    b.Navigation("TempCertificateCourses");

                    b.Navigation("TempSubjects");

                    b.Navigation("WeeklySchedules");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.TempSubject", b =>
                {
                    b.Navigation("TempLessions");
                });

            modelBuilder.Entity("Funix.HannahAssistant.Api.Entities.User", b =>
                {
                    b.Navigation("Hannah");
                });
#pragma warning restore 612, 618
        }
    }
}
